{"ast":null,"code":"var _jsxFileName = \"/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, VStack, ListItem, Input, Button, Icon, Text } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport './mainPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const templates = ['SlackBot', 'FastAPI', 'CLI tool'];\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [selectedPath, setSelectedPath] = useState(null);\n  const handleTemplateClick = template => {\n    setSelectedTemplate(template);\n  };\n  const handleFileInput = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedPath(event.target.files[0].path);\n    }\n  };\n  const handleDuplicate = () => {\n    // Logic for duplicating the template in the selected destination\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"2xl\",\n      fontWeight: \"bold\",\n      className: \"title\",\n      children: \"Select the template you want to duplicate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      as: \"ul\",\n      className: \"list\",\n      spacing: 3,\n      children: templates.map(template => /*#__PURE__*/_jsxDEV(ListItem, {\n        as: \"li\",\n        onClick: () => handleTemplateClick(template),\n        className: `list-item ${selectedTemplate === template ? 'selected' : ''}`,\n        children: [template, selectedTemplate === template && /*#__PURE__*/_jsxDEV(Icon, {\n          as: CheckIcon,\n          ml: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 47\n        }, this)]\n      }, template, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        id: \"file\",\n        className: \"input\",\n        onChange: handleFileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"input-label\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: CheckIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-label-text\",\n          children: selectedPath ? 'Path selected' : 'Choose a destination'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleDuplicate,\n      className: \"button\",\n      children: \"Duplicate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"/eiQsP06ClA6kzn5xTQBS4HTuKM=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","Box","VStack","ListItem","Input","Button","Icon","Text","CheckIcon","jsxDEV","_jsxDEV","MainPage","_s","templates","selectedTemplate","setSelectedTemplate","selectedPath","setSelectedPath","handleTemplateClick","template","handleFileInput","event","target","files","path","handleDuplicate","className","children","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","as","spacing","map","onClick","ml","type","id","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, VStack, ListItem, Input, Button, Icon, Text } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport './mainPage.css';\n\nconst MainPage: React.FC = () => {\n  const templates = [\n    'SlackBot',\n    'FastAPI',\n    'CLI tool',\n  ];\n  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);\n  const [selectedPath, setSelectedPath] = useState<string | null>(null);\n\n  const handleTemplateClick = (template: string) => {\n    setSelectedTemplate(template);\n  };\n\n  const handleFileInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedPath(event.target.files[0].path);\n    }\n  };\n\n  const handleDuplicate = () => {\n    // Logic for duplicating the template in the selected destination\n  };\n\n  return (\n    <Box className=\"container\">\n      <Text fontSize=\"2xl\" fontWeight=\"bold\" className=\"title\">\n        Select the template you want to duplicate\n      </Text>\n      <VStack as=\"ul\" className=\"list\" spacing={3}>\n        {templates.map((template) => (\n          <ListItem\n            as=\"li\"\n            key={template}\n            onClick={() => handleTemplateClick(template)}\n            className={`list-item ${selectedTemplate === template ? 'selected' : ''}`}\n          >\n            {template}\n            {selectedTemplate === template && <Icon as={CheckIcon} ml={2} />}\n          </ListItem>\n        ))}\n      </VStack>\n      <Box className=\"input-wrapper\">\n        <Input\n          type=\"file\"\n          id=\"file\"\n          className=\"input\"\n          onChange={handleFileInput}\n        />\n        <label htmlFor=\"file\" className=\"input-label\">\n          <Icon as={CheckIcon} />\n          <span className=\"input-label-text\">\n            {selectedPath ? 'Path selected' : 'Choose a destination'}\n          </span>\n        </label>\n      </Box>\n      <Button onClick={handleDuplicate} className=\"button\">\n        Duplicate\n      </Button>\n    </Box>\n  );\n};\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}