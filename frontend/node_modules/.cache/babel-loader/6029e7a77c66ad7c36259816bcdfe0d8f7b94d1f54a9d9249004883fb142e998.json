{"ast":null,"code":"var _jsxFileName = \"/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport { Button, VStack, Box, Text, Heading, Input, List, ListItem, Icon, useToast, Collapse, Tooltip } from \"@chakra-ui/react\";\nimport { CheckIcon, AttachmentIcon, WarningIcon } from \"@chakra-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { sendWhitelistedMessageToMain, invokeWhitelistedMessageFromMain } from \"./service/electron\";\nimport EVENTS from \"../../events.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst templates = [\"SlackBot\", \"FastAPI\", \"CLI tool\"];\nconst MainPage = () => {\n  _s();\n  const [templates, setTemplates] = useState(null);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const toast = useToast();\n  const handleTemplateClick = template => {\n    setSelectedTemplate(prevSelectedTemplate => prevSelectedTemplate === template ? null : template);\n  };\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setDestination(e.target.files[0].path);\n    }\n  };\n  const handleChooseDestinationClick = () => {\n    var _document$getElementB;\n    (_document$getElementB = document.getElementById(\"destination-input\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n  };\n  const handleDuplicateClick = async () => {\n    sendWhitelistedMessageToMain(EVENTS.duplicate_template, {\n      selectedTemplate,\n      destination\n    });\n    // await template.duplicateTemplate(selectedTemplate, destination)\n    toast({\n      title: \"Template duplicated\",\n      description: `Template ${selectedTemplate} has been duplicated to ${destination}`,\n      status: \"success\",\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  useEffect(() => {\n    const getTemplates = async () => {\n      const templates = await invokeWhitelistedMessageFromMain(EVENTS.select_template);\n      // the return type is void so it cause an issue on the set template \n      setTemplates(templates);\n    };\n    getTemplates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    spacing: 10,\n    minHeight: \"100vh\",\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      alignItems: \"center\",\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"2xl\",\n        children: \"Template Duplicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        textAlign: \"center\",\n        children: \"Select a project template and choose a destination to create a duplicate. Get started with a pre-configured template for SlackBot, FastAPI, CLI tool, and more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        mb: 4,\n        children: \"Select the template you want to duplicate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        spacing: 4,\n        children: templates.map(template => /*#__PURE__*/_jsxDEV(ListItem, {\n          p: 4,\n          borderWidth: 1,\n          borderRadius: \"lg\",\n          borderColor: \"gray.300\",\n          _hover: {\n            bg: \"gray.100\"\n          },\n          cursor: \"pointer\",\n          className: `list-item ${selectedTemplate === template ? \"selected\" : \"\"}`,\n          onClick: () => handleTemplateClick(template),\n          children: [template, /*#__PURE__*/_jsxDEV(Collapse, {\n            in: selectedTemplate === template,\n            animateOpacity: true,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: CheckIcon,\n              ml: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, template, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      leftIcon: /*#__PURE__*/_jsxDEV(AttachmentIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }, this),\n      onClick: handleChooseDestinationClick,\n      colorScheme: \"blue\",\n      className: \"button\",\n      children: \"Choose destination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      accept: \"directory\",\n      onChange: handleFileChange,\n      display: \"none\",\n      id: \"destination-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      leftIcon: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }, this),\n      onClick: handleDuplicateClick,\n      isDisabled: selectedTemplate === null || destination === null,\n      colorScheme: \"blue\",\n      className: \"button\",\n      children: [\"Duplicate\", selectedTemplate === null || destination === null ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: \"Please select a template and a destination\",\n        placement: \"top\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          as: WarningIcon,\n          ml: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"6MydKoyhDeyxa5mgOIIQvAF91vY=\", false, function () {\n  return [useToast];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["Button","VStack","Box","Text","Heading","Input","List","ListItem","Icon","useToast","Collapse","Tooltip","CheckIcon","AttachmentIcon","WarningIcon","React","useEffect","useState","sendWhitelistedMessageToMain","invokeWhitelistedMessageFromMain","EVENTS","jsxDEV","_jsxDEV","templates","MainPage","_s","setTemplates","selectedTemplate","setSelectedTemplate","destination","setDestination","toast","handleTemplateClick","template","prevSelectedTemplate","handleFileChange","e","target","files","length","path","handleChooseDestinationClick","_document$getElementB","document","getElementById","click","handleDuplicateClick","duplicate_template","title","description","status","duration","isClosable","getTemplates","select_template","alignItems","justifyContent","spacing","minHeight","className","children","as","size","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","textAlign","mb","map","p","borderWidth","borderRadius","borderColor","_hover","bg","cursor","onClick","in","animateOpacity","ml","leftIcon","colorScheme","type","accept","onChange","display","id","isDisabled","label","placement","_c","$RefreshReg$"],"sources":["/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx"],"sourcesContent":["import {\n  Button,\n  VStack,\n  Box,\n  Text,\n  Heading,\n  Input,\n  List,\n  ListItem,\n  Icon,\n  useToast,\n  Collapse,\n  Tooltip\n} from \"@chakra-ui/react\";\nimport { CheckIcon, AttachmentIcon, WarningIcon } from \"@chakra-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { sendWhitelistedMessageToMain, invokeWhitelistedMessageFromMain } from \"./service/electron\";\nimport EVENTS from \"../../events.json\"\n\nconst templates = [\"SlackBot\", \"FastAPI\", \"CLI tool\"];\n\nconst MainPage = () => {\n  const [templates, setTemplates] = useState<({name: any, folder: string} | null)>(null);\n  const [selectedTemplate, setSelectedTemplate] = useState<({name: any, folder: string}| null)>(null);\n  const [destination, setDestination] = useState<string | null>(null);\n  const toast = useToast();\n\n  const handleTemplateClick = (template: {name: any, folder: string}) => {\n    setSelectedTemplate((prevSelectedTemplate) =>\n      prevSelectedTemplate === template ? null : template\n    );\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setDestination(e.target.files[0].path);\n    }\n  };\n\n  const handleChooseDestinationClick = () => {\n    document.getElementById(\"destination-input\")?.click();\n  };\n\n  const handleDuplicateClick = async () => {\n    sendWhitelistedMessageToMain(EVENTS.duplicate_template, { selectedTemplate, destination });\n    // await template.duplicateTemplate(selectedTemplate, destination)\n    toast({\n      title: \"Template duplicated\",\n      description: `Template ${selectedTemplate} has been duplicated to ${destination}`,\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n\n  useEffect(() => {\n    const getTemplates = async () => {\n      const templates = await invokeWhitelistedMessageFromMain(EVENTS.select_template);\n      // the return type is void so it cause an issue on the set template \n      setTemplates(templates as any);\n    };\n  \n    getTemplates();\n  }, []);  \n\n  return (\n    <VStack\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={10}\n      minHeight=\"100vh\"\n      className=\"main-page\"\n    >\n      <VStack alignItems=\"center\" spacing={4}>\n        <Heading as=\"h1\" size=\"2xl\">\n          Template Duplicator\n        </Heading>\n        <Text fontSize=\"lg\" textAlign=\"center\">\n          Select a project template and choose a destination to create a duplicate. Get started with a pre-configured template for SlackBot, FastAPI, CLI tool, and more.\n        </Text>\n      </VStack>\n      <Box>\n        <Text fontSize=\"xl\" mb={4}>\n          Select the template you want to duplicate\n        </Text>\n        <List spacing={4}>\n          {templates.map((template) => (\n            <ListItem\n              key={template}\n              p={4}\n              borderWidth={1}\n              borderRadius=\"lg\"\n              borderColor=\"gray.300\"\n              _hover={{ bg: \"gray.100\" }}\n              cursor=\"pointer\"\n              className={`list-item ${selectedTemplate === template ? \"selected\" : \"\"}`}\n              onClick={() => handleTemplateClick(template)}\n            >\n              {template}\n              <Collapse in={selectedTemplate === template} animateOpacity>\n                <Icon as={CheckIcon} ml={2} />\n              </Collapse>\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n      <Button\n        leftIcon={<AttachmentIcon />}\n        onClick={handleChooseDestinationClick}\n        colorScheme=\"blue\"\n        className=\"button\"\n      >\n        Choose destination\n      </Button>\n      <Input\n        type=\"file\"\n        accept=\"directory\"\n        onChange={handleFileChange}\n        display=\"none\"\n        id=\"destination-input\"\n      />\n      <Button\n        leftIcon={<CheckIcon />}\n        onClick={handleDuplicateClick}\n        isDisabled={selectedTemplate === null || destination === null}\n        colorScheme=\"blue\"\n        className=\"button\" >\n        Duplicate\n        {selectedTemplate === null || destination === null ? (\n          <Tooltip label=\"Please select a template and a destination\" placement=\"top\">\n            <Icon as={WarningIcon} ml={2} />\n          </Tooltip>\n        ) : null}\n      </Button>\n    </VStack>\n  );\n};\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}