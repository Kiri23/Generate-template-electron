{"ast":null,"code":"var _jsxFileName = \"/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Center, UnorderedList, ListItem, VStack, Input, Button, Text, useColorModeValue } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport \"./MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [templates, setTemplates] = useState(['SlackBot', 'FastAPI', 'CLI tool']);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const handleTemplateSelect = template => {\n    setSelectedTemplate(template);\n  };\n  const handleDestinationSelect = e => {\n    setDestination(e.target.value);\n  };\n  const handleDuplicate = () => {\n    // Implement the logic to duplicate the selected template\n  };\n  const bgGradient = useColorModeValue('linear(to-br, teal.400, blue.500)', 'linear(to-br, teal.700, blue.800)');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 8,\n        p: 4,\n        bgColor: \"white\",\n        borderRadius: \"lg\",\n        boxShadow: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          fontWeight: \"bold\",\n          children: \"Select the template you want to duplicate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(UnorderedList, {\n            spacing: 3,\n            listStyleType: \"none\",\n            children: templates.map(template => /*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => handleTemplateSelect(template),\n              cursor: \"pointer\",\n              bg: \"gray.100\",\n              borderRadius: \"md\",\n              py: 2,\n              px: 4,\n              display: \"flex\",\n              alignItems: \"center\",\n              _hover: {\n                bg: 'gray.200'\n              },\n              children: [selectedTemplate === template && /*#__PURE__*/_jsxDEV(CheckIcon, {\n                color: \"green.500\",\n                mr: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), template]\n            }, template, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          onChange: handleDestinationSelect,\n          boxShadow: \"inner\",\n          p: 1,\n          borderRadius: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDuplicate,\n          colorScheme: \"blue\",\n          size: \"lg\",\n          children: \"Duplicate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"ZO3mbPdgMRy7hX4qazBhZc0znZY=\", false, function () {\n  return [useColorModeValue];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","Box","Center","UnorderedList","ListItem","VStack","Input","Button","Text","useColorModeValue","CheckIcon","jsxDEV","_jsxDEV","MainPage","_s","templates","setTemplates","selectedTemplate","setSelectedTemplate","destination","setDestination","handleTemplateSelect","template","handleDestinationSelect","e","target","value","handleDuplicate","bgGradient","children","h","spacing","p","bgColor","borderRadius","boxShadow","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","w","listStyleType","map","onClick","cursor","bg","py","px","display","alignItems","_hover","color","mr","type","onChange","colorScheme","size","_c","$RefreshReg$"],"sources":["/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Center,\n  UnorderedList,\n  ListItem,\n  VStack,\n  Input,\n  Button,\n  Icon,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport \"./MainPage.css\";\n\nconst MainPage: React.FC = () => {\n  const [templates, setTemplates] = useState<string[]>([\n    'SlackBot',\n    'FastAPI',\n    'CLI tool',\n  ]);\n  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);\n  const [destination, setDestination] = useState<string | null>(null);\n\n  const handleTemplateSelect = (template: string) => {\n    setSelectedTemplate(template);\n  };\n\n  const handleDestinationSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDestination(e.target.value);\n  };\n\n  const handleDuplicate = () => {\n    // Implement the logic to duplicate the selected template\n  };\n\n  const bgGradient = useColorModeValue(\n    'linear(to-br, teal.400, blue.500)',\n    'linear(to-br, teal.700, blue.800)'\n  );\n\n  return (\n    <Box>\n      <Center h=\"100%\">\n        <VStack spacing={8} p={4} bgColor=\"white\" borderRadius=\"lg\" boxShadow=\"lg\">\n          <Text fontSize=\"2xl\" fontWeight=\"bold\">\n            Select the template you want to duplicate\n          </Text>\n          <Box w=\"100%\">\n            <UnorderedList spacing={3} listStyleType=\"none\">\n              {templates.map((template) => (\n                <ListItem\n                  key={template}\n                  onClick={() => handleTemplateSelect(template)}\n                  cursor=\"pointer\"\n                  bg=\"gray.100\"\n                  borderRadius=\"md\"\n                  py={2}\n                  px={4}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  _hover={{ bg: 'gray.200' }}\n                >\n                  {selectedTemplate === template && (\n                    <CheckIcon color=\"green.500\" mr={2} />\n                  )}\n                  {template}\n                </ListItem>\n              ))}\n            </UnorderedList>\n          </Box>\n          <Input\n            type=\"file\"\n            onChange={handleDestinationSelect}\n            boxShadow=\"inner\"\n            p={1}\n            borderRadius=\"md\"\n          />\n          <Button onClick={handleDuplicate} colorScheme=\"blue\" size=\"lg\">\n            Duplicate\n          </Button>\n        </VStack>\n      </Center>\n    </Box>\n  );\n};\n\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}