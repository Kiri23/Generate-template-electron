{"ast":null,"code":"var _jsxFileName = \"/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Center, UnorderedList, ListItem, VStack, Input, Button, Text } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [templates, setTemplates] = useState(['SlackBot', 'FastAPI', 'CLI tool']);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const handleTemplateSelect = template => {\n    setSelectedTemplate(template);\n  };\n  const handleDestinationSelect = e => {\n    setDestination(e.target.value);\n  };\n  const handleDuplicate = () => {\n    // Implement the logic to duplicate the selected template\n  };\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        children: \"Select the template you want to duplicate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UnorderedList, {\n        spacing: 3,\n        children: templates.map(template => /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => handleTemplateSelect(template),\n          cursor: \"pointer\",\n          children: [selectedTemplate === template && /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 49\n          }, this), template]\n        }, template, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        onChange: handleDestinationSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDuplicate,\n        colorScheme: \"blue\",\n        children: \"Duplicate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"0vyTNPko/SPS407sWqIMNRkDr4g=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","Center","UnorderedList","ListItem","VStack","Input","Button","Text","CheckIcon","jsxDEV","_jsxDEV","MainPage","_s","templates","setTemplates","selectedTemplate","setSelectedTemplate","destination","setDestination","handleTemplateSelect","template","handleDestinationSelect","e","target","value","handleDuplicate","children","spacing","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","cursor","type","onChange","colorScheme","_c","$RefreshReg$"],"sources":["/Users/christiannogueras/Documents/Personal projects/Electron projects/generate-templates/frontend/src/MainPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Center,\n  UnorderedList,\n  ListItem,\n  VStack,\n  Input,\n  Button,\n  Icon,\n  Text,\n} from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\n\nconst MainPage: React.FC = () => {\n  const [templates, setTemplates] = useState<string[]>([\n    'SlackBot',\n    'FastAPI',\n    'CLI tool',\n  ]);\n  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);\n  const [destination, setDestination] = useState<string | null>(null);\n\n  const handleTemplateSelect = (template: string) => {\n    setSelectedTemplate(template);\n  };\n\n  const handleDestinationSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDestination(e.target.value);\n  };\n\n  const handleDuplicate = () => {\n    // Implement the logic to duplicate the selected template\n  };\n\n  return (\n    <Center>\n      <VStack spacing={6}>\n        <Text fontSize=\"2xl\">Select the template you want to duplicate</Text>\n        <UnorderedList spacing={3}>\n          {templates.map((template) => (\n            <ListItem\n              key={template}\n              onClick={() => handleTemplateSelect(template)}\n              cursor=\"pointer\"\n            >\n              {selectedTemplate === template && <CheckIcon />}\n              {template}\n            </ListItem>\n          ))}\n        </UnorderedList>\n        <Input\n          type=\"file\"\n          onChange={handleDestinationSelect}\n        />\n        <Button onClick={handleDuplicate} colorScheme=\"blue\">\n          Duplicate\n        </Button>\n      </VStack>\n    </Center>\n  );\n};\n\nexport default MainPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAEEC,MAAM,EACNC,aAAa,EACbC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,MAAM,EAENC,IAAI,QACC,kBAAkB;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAW,CACnD,UAAU,EACV,SAAS,EACT,UAAU,CACX,CAAC;EACF,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAC7E,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC;EAEnE,MAAMmB,oBAAoB,GAAIC,QAAgB,IAAK;IACjDJ,mBAAmB,CAACI,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMC,uBAAuB,GAAIC,CAAsC,IAAK;IAC1EJ,cAAc,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;EAAA,CACD;EAED,oBACEf,OAAA,CAACT,MAAM;IAAAyB,QAAA,eACLhB,OAAA,CAACN,MAAM;MAACuB,OAAO,EAAE,CAAE;MAAAD,QAAA,gBACjBhB,OAAA,CAACH,IAAI;QAACqB,QAAQ,EAAC,KAAK;QAAAF,QAAA,EAAC;MAAyC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACrEtB,OAAA,CAACR,aAAa;QAACyB,OAAO,EAAE,CAAE;QAAAD,QAAA,EACvBb,SAAS,CAACoB,GAAG,CAAEb,QAAQ,iBACtBV,OAAA,CAACP,QAAQ;UAEP+B,OAAO,EAAEA,CAAA,KAAMf,oBAAoB,CAACC,QAAQ,CAAE;UAC9Ce,MAAM,EAAC,SAAS;UAAAT,QAAA,GAEfX,gBAAgB,KAAKK,QAAQ,iBAAIV,OAAA,CAACF,SAAS;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,EAC9CZ,QAAQ;QAAA,GALJA,QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOhB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACY,eAChBtB,OAAA,CAACL,KAAK;QACJ+B,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEhB;MAAwB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClC,eACFtB,OAAA,CAACJ,MAAM;QAAC4B,OAAO,EAAET,eAAgB;QAACa,WAAW,EAAC,MAAM;QAAAZ,QAAA,EAAC;MAErD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEb,CAAC;AAACpB,EAAA,CA/CID,QAAkB;AAAA4B,EAAA,GAAlB5B,QAAkB;AAiDxB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}